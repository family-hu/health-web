<template>
    <div>
      <ul v-infinite-scroll="loadMore" infinite-scroll-disabled="loading" infinite-scroll-distance="10" infinite-scroll-immediate-check="false">
        <doctor-item v-for="(doctorDetail,index) in doctorList" :key="index" :doctorDetail="doctorDetail" @click.native="toDetail(doctorDetail)"></doctor-item>
      </ul>
    </div>
</template>

<script>
  import DoctorItem from './DoctorItem.vue'
  import Header from '../Header.vue'
    export default {
        data() {
          return {
            orgId:this.$route.query.orgId,
            type: this.$route.query.type,
            doctorList: [],
            loading: false,
            page: 1,
            loaded: false,   //是否加载完成
          }
        },

        components: {
          doctorItem: DoctorItem,
          appHeader: Header
        },

      methods:{
        toDetail(doctorDetail) {
          this.$router.push({path: "doctorDetail", query: { userId: doctorDetail.userId.value}})
        },

        loadMore() {
            if(!this.loaded) {
                this.requestDoctorList();
            }
          },

          requestDoctorList() {
            this.loading = true;
            let request = {type: this.type, orgId:this.orgId, pageNum:this.page,pageSize:10};
            let vm = this;
            let method = "doctorList";
            if(this.type) {
              method = "newDocList";
            }
            this.$store.dispatch(method, request).then((data) => {
              vm.page++;
              if(data.doctorList) {
                for(let i = 0; i < data.doctorList.length; i++) {
                  vm.doctorList.push(data.doctorList[i]);
                }
              }
              vm.loaded = (vm.doctorList.length == data.total);
              vm.loading = false;
            }).catch(error => {
              vm.loading = false;
              vm.loaded = true;
              this.$toast(error.message);
            });
          }
      },

        created() {
            this.requestDoctorList();
        }

    }
</script>

<style scoped>
  ul,li{ padding:0;list-style:none;margin: 0}
</style>
